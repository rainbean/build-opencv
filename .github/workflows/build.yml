name: Build OpenCV

# # trigger on tags
# on:
#   push:
#     tags:
#       - "*"
# manual trigger
on: workflow_dispatch

# for windows and linux
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
#           - os: ubuntu-18.04
#             artifact: opencv-linux.tar.xz
#             triplet: x64-linux
#             arch: ""
          - os: windows-2019
            artifact: opencv-win64.zip
            triplet: x64-windows
            arch: -G "Visual Studio 16 2019" -A "x64"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Add MSBuild to PATH
        if: contains(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v1.0.2

      # Use prebuilt binary to workaround issue https://github.com/opencv/opencv/issues/9953
      - name: Download OpenBLAS
        if: contains(matrix.os, 'windows')
        working-directory: ${{ github.workspace }}
        run: |
          Invoke-WebRequest https://github.com/xianyi/OpenBLAS/releases/download/v0.3.13/OpenBLAS-0.3.13-x64.zip -O OpenBLAS.zip
          Expand-Archive OpenBLAS.zip OpenBLAS
          Copy-Item OpenBLAS\lib\libopenblas.lib OpenBLAS\lib\openblas.lib

      - name: Restore artifacts, or setup vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"
          vcpkgTriplet: ${{ matrix.triplet }}
          vcpkgArguments: eigen3 tbb

      - name: CMake configure and build
        uses: lukka/run-cmake@v3
        env:
          OpenBLAS_HOME: ${{ github.workspace }}/OpenBLAS
        with:
          useVcpkgToolchainFile: true
          buildDirectory: ${{ github.workspace }}/build
          buildWithCMake: false
          buildWithCMakeArgs: '--target install --config Release'
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: "${{ github.workspace }}/opencv/CMakeLists.txt"
          cmakeAppendedArgs: >
            "${{ matrix.arch }}"
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/dist"
            -DWITH_EIGEN=ON
            -DWITH_TBB=ON
            -DWITH_OPENGL=ON
            -DBUILD_TIFF=ON
            -DWITH_QT=OFF
            -DWITH_FFMPEG=OFF
            -DBUILD_opencv_apps=OFF
            -DBUILD_DOCS=OFF
            -DBUILD_PACKAGE=OFF
            -DBUILD_PERF_TESTS=OFF
            -DBUILD_TESTS=OFF
            -DBUILD_JAVA=OFF
            -DBUILD_opencv_python2=OFF
            -DBUILD_opencv_python3=OFF
            -DBUILD_LIST="imgcodecs,imgproc,highgui"
            -DBUILD_opencv_world=ON

      - name: Pack Windows binaries
        if: contains(matrix.os, 'windows')
        working-directory: ${{ github.workspace }}
        run: |
          Copy-Item vcpkg\installed\x64-windows\bin\tbb.dll dist\x64\vc16\bin\
          Copy-Item OpenBLAS\bin\libopenblas.dll dist\x64\vc16\bin\
          Compress-Archive -Path dist\* -DestinationPath ${{ matrix.artifact }}

      - name: Pack Linux binaries
        if: contains(matrix.os, 'ubuntu')
        working-directory: ${{ github.workspace }}/dist
        run: tar Jcf ../${{ matrix.artifact }} *

#       - name: Upload binaries to release
#         uses: svenstaro/upload-release-action@v2
#         with:
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#           file: ${{ github.workspace }}/${{ matrix.artifact }}
#           tag: ${{ github.ref }}

